{"version":3,"sources":["components/homepage/homepage-icon/HomepageIcon.tsx","components/homepage/Homepage.tsx","utils/base/Base.tsx","components/villagers/VillagersManager.tsx","components/shared/page-title/PageTitle.tsx","components/villagers/villager-item/VillagerItem.tsx","components/villagers/villager-filters/VillagerFilters.tsx","components/villagers/villager-details/VillagerDetails.tsx","components/villagers/Villagers.tsx","components/music/MusicManager.tsx","components/music/song-item/SongItem.tsx","components/music/Music.tsx","components/creatures/CreaturesManager.tsx","components/creatures/creature/creature-item/CreatureItem.tsx","components/creatures/creature-details/CreatureDetails.tsx","components/creatures/creature/Creature.tsx","components/creatures/Creatures.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomepageIcon","props","Grid","item","xs","to","this","homepageItem","link","className","src","imageUrl","name","React","Component","Homepage","state","time","checkTime","setTimeout","now","Date","setState","toLocaleString","hour","minute","hour12","Container","container","spacing","id","map","key","Base","_baseEndpoint","_get","request","a","url","fetch","response","json","body","status","Error","message","value","currentState","data","VillagersManager","_getAllVillagers","PageTitle","backLink","backLinkDisplay","pageTitle","VillagerItem","_currentVillager","villager","style","borderColor","bubbleColor","iconUri","DefaultSelectionElement","FormControlLabel","DEFAULT_SELECTION","control","Radio","label","FilterGroup","groupName","optionsArr","changeFn","FormControl","FormLabel","component","RadioGroup","aria-label","onChange","FormGroup","VillagerFilters","gender","hobby","species","personality","genderSelectionChange","bind","hobbiesSelectionChange","personalitiesSelectionChange","speciesSelectionChange","event","changeState","target","_currentState","onFilterSelecionChange","_personalities","availableFilters","personalities","_hobbies","hobbies","_gender","_species","md","VillagerSubDetail","text","VillagerDetails","_villager","onClick","closeAction","imageUri","saying","Chip","backgroundColor","color","textColor","birthday","catchphrase","FilterChip","filter","filterLabel","Villagers","_isMounted","modalOpen","currentVillager","allVillagers","filteredVillagers","allPersonalities","allHobbies","allGender","allSpecies","textFilter","radioFilters","openVillagerModal","closeVillagerModal","textSearch","filterSelectionChange","_allVillagers","_allPersonalities","_allHobbies","_allGender","_allSpecies","then","villagers","v","hasOwnProperty","_newVillager","renderVillager","push","includes","_changeState","searchString","_search","toLowerCase","indexOf","_filteredArr","_filterSelections","_filterByPersonality","personalitySearch","_filterByHobby","hobbySearch","_filterByGender","genderSearch","speciesSearch","selectedPersonality","selectedHobby","selectedGender","selectedSpecies","console","log","allSearch","filtersSelection","_filtered","_filteredString","radioSearch","_modalOpen","_selectedFilter","_availableFilters","fontSize","TextField","variant","textSearchChange","Accordion","AccordionSummary","expandIcon","AccordionDetails","length","Modal","open","onClose","MusicManager","_getAllSongs","_getSong","songId","SongItem","song","controls","musicUri","type","Music","allSongs","filteredSongs","songs","renderAllSongs","_allSongs","Object","keys","forEach","_currentSong","_newSong","CreaturesManager","CreatureItem","fish","alt","FishDetail","Months","monthsArr","month","mo","CreatureDetails","_time","isAllDay","timeString","_cjPrice","price_cj","_flickPrice","price_flick","_extraPrice","_price","price","position","location","shadow","monthsAvailable_northern","monthsAvailable_southern","museumInfo","Creature","currentFish","filteredFishes","isOpenModal","openModal","closeModal","fishes","_fishList","Creatures","activeTab","allFishes","allBugs","allSeaCreatures","handleTabChange","_getAllFishes","_allFishes","renderCreature","_getAllBugs","bugs","_allBugs","_getAllSeaCreatures","creatures","_allSeaCreatures","newValue","kind","_allCreatures","_currentCreature","_newCreature","isAllYear","getMonthArray","timeAvailable","monthArr","_monthArrStr","m","getMonth","index","Tooltip","title","Button","disabled","Tabs","indicatorColor","centered","Tab","hidden","App","basename","process","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.54cd2a1d.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { IHomepageItem } from '../IHomepageItem';\nimport { Link } from \"react-router-dom\"; \n\nexport class HomepageIcon extends React.Component<{homepageItem: IHomepageItem}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Grid item xs={4}>  \n        <Link to={this.props.homepageItem.link}>\n          <div className=\"homepage-item-container padded-1y\">\n            <div className=\"homepage-item\">\n              <div className=\"homepage-item-image\">\n                <img src={`assets/homepage_icons/${this.props.homepageItem.imageUrl}`}/>\n              </div>\n              <h2 className=\"font-color-dark homage-item-name\">{this.props.homepageItem.name}</h2>\n            </div>\n          </div>\n        </Link>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport './IHomepageItem';\nimport './Homepage.css';\nimport { IHomepageItem } from './IHomepageItem';\nimport { HomepageIcon } from './homepage-icon/HomepageIcon';\n\nexport class Homepage extends React.Component<{}, {time: string}> {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      time: ''\n    }\n  }\n  \n  componentDidMount() {\n    const checkTime = () => {\n      setTimeout(() => {\n        const now = new Date();\n        this.setState({\n          time: now.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n        });\n        checkTime();\n      }, 500);\n    }\n\n    checkTime();\n  }\n\n  render() {\n    const time = new Date();\n    const icons:IHomepageItem[] = [\n      {\n        id: 'homepage-icon--1',\n        name: \"Villagers\",\n        imageUrl: \"villager_icon.png\",\n        link: '/villagers'\n      },\n      {\n        id: 'homepage-icon--2',\n        name: \"Music\",\n        imageUrl: \"music_icon.png\",\n        link: '/music'\n      },\n      {\n        id: 'homepage-icon--3',\n        name: \"Creatures\",\n        imageUrl: \"creature_icon.png\",\n        link: '/creatures'\n      },\n      {\n        id: 'homepage-icon--4',\n        name: \"DIY\",\n        imageUrl: \"diy_icon.png\",\n        link: '/diy'\n      },\n      {\n        id: 'homepage-icon--5',\n        name: \"Shopping\",\n        imageUrl: \"shopping_icon.png\",\n        link: '/'\n      },\n      {\n        id: 'homepage-icon--6',\n        name: \"Art\",\n        imageUrl: \"art_icon.png\",\n        link: '/'\n      },\n    ];\n\n    return (\n      <div className=\"background-main font--main homepage-wrapper padded-6y\">\n        <div className=\"homepage-container\">\n          <Container>\n            <h3 className=\"font-color-light homepage-time\">{this.state.time}</h3>\n            <h1 className=\"font-color-dark homepage-title\">Animal Crossing: New Horizons</h1>\n\n            <div className=\"padded-6y homepage-grid-wrapper\">\n              <Grid container spacing={2}>\n                {icons.map((homepageItem: IHomepageItem) => <HomepageIcon key={homepageItem.id} homepageItem={homepageItem}/> )}\n              </Grid>\n            </div>\n          </Container>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'; \n\nexport class Base extends React.Component<{}, {data: any}> {\n  private _baseEndpoint = 'https://acnhapi.com/v1';\n  \n  /**\n   * GET call\n   * @param request\n   */\n  _get = async(request: string): Promise<any> => {\n    const url = `${this._baseEndpoint}${request}`;\n    \n    const response = await fetch(url);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n        throw Error(body.message) \n    }\n\n    return body;\n  }\n\n  /**\n   * update state\n   * @param key \n   * @param value \n   */\n  _changeState(key: string, value: any) {\n    let currentState = this.state.data;\n    currentState[key] = value;\n\n    this.setState(currentState);\n  }\n}","import { Base } from '../../utils/base/Base';\n\nexport class VillagersManager extends Base {\n  /**\n   * get a list of all villagers\n   */\n  _getAllVillagers = async() => {\n    return this._get('/villagers');\n  }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\"; \nimport './PageTitle.css';\n\nexport class PageTitle extends React.Component<{backLinkDisplay, backLink, pageTitle}, {}> {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n      <div className=\"padded-2y\">\n        <h3 className=\"font-color-light\">\n          <Link to={this.props.backLink}>\n            <span className=\"page-title-breadcrumb\">{'< ' + this.props.backLinkDisplay}</span>\n          </Link>\n        </h3>\n        <h1 className=\"font-color-dark page-title\">{this.props.pageTitle}</h1>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport './VillagerItem.css';\nimport { IVillager } from '../IVillager';\n\nexport class VillagerItem extends React.Component<{villager: IVillager}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _currentVillager: IVillager = this.props.villager;\n    return(\n      <div className=\"villager-item-container padded-1x padded-1y\">\n        <div className=\"villager-item-image\" style={{borderColor: _currentVillager.bubbleColor}}>\n          <img src={_currentVillager.iconUri} />\n        </div>\n        <h3 className=\"villager-item-name font-color-dark\">{_currentVillager.name}</h3>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './VillagerFilters.css';\nimport { Grid, FormLabel, FormGroup, FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport { IVillageFilters, IVillageFiltersSelection } from './IVillageFilters';\n\ninterface IVillagerFiltersProps {\n  onFilterSelecionChange(filters: IVillageFiltersSelection): void, \n  availableFilters: IVillageFilters \n}\n\nconst DefaultSelectionElement = ({key}) => {\n  return <FormControlLabel\n    key='gender-all'\n    value={DEFAULT_SELECTION}\n    control={<Radio />}\n    label={DEFAULT_SELECTION}\n  />\n};\n\nconst FilterGroup = ({groupName, optionsArr, state, changeFn}) => {\n  return (\n    <FormControl>\n      <FormLabel component=\"legend\">{groupName}</FormLabel>\n      <RadioGroup aria-label=\"gender\" name=\"gender\" value={state} onChange={changeFn}>\n        <FormGroup className=\"filter-form-group padded-2x font--main\">\n          <DefaultSelectionElement key='gender-all' />\n          {optionsArr.map((optionsArr:string) => \n            <FormControlLabel\n              key={optionsArr}\n              value={optionsArr}\n              control={<Radio />}\n              label={optionsArr}\n          />)}\n        </FormGroup>\n      </RadioGroup>\n    </FormControl>\n  )\n};\n\nconst DEFAULT_SELECTION = 'all';\n\nexport class VillagerFilters extends React.Component<IVillagerFiltersProps, IVillageFiltersSelection> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: DEFAULT_SELECTION,\n      hobby: DEFAULT_SELECTION,\n      species: DEFAULT_SELECTION,\n      personality: DEFAULT_SELECTION\n    }\n\n    this.genderSelectionChange = this.genderSelectionChange.bind(this);\n    this.hobbiesSelectionChange = this.hobbiesSelectionChange.bind(this);\n    this.personalitiesSelectionChange = this.personalitiesSelectionChange.bind(this);\n    this.speciesSelectionChange = this.speciesSelectionChange.bind(this);\n  }\n\n  /**\n   * when a gender filter is selected\n   * @param event\n   */\n  genderSelectionChange(event) {\n    this.changeState('gender', event.target.value);\n  }\n\n  /**\n   * when a hobbies filter is selected\n   * @param event\n   */\n  hobbiesSelectionChange(event) {\n    this.changeState('hobby', event.target.value);\n  }\n\n  /**\n   * when a personalities filter is selected\n   * @param event\n   */\n  personalitiesSelectionChange(event) {\n    this.changeState('personality', event.target.value);\n  }\n\n  /**\n   * when a species filter is selected\n   * @param event\n   */\n  speciesSelectionChange(event) {\n    this.changeState('species', event.target.value);\n  }\n\n\n  /**\n   * change a state value\n   * @param key\n   * @param value \n   */\n  changeState(key: string, value: string) {\n    let _currentState = this.state;\n    _currentState[key] = value;\n\n    this.setState(_currentState);\n    this.props.onFilterSelecionChange(this.state);\n  }\n\n  render() {\n    const _personalities: string[] = this.props.availableFilters.personalities;\n    const _hobbies: string[] = this.props.availableFilters.hobbies;\n    const _gender: string[] = this.props.availableFilters.gender;\n    const _species: string[] = this.props.availableFilters.species;\n\n    return (\n      <div className=\"padded-4x\">\n        <Grid container spacing={4}>\n          \n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Gender' optionsArr={_gender} state={this.state.gender} changeFn={this.genderSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Hobby' optionsArr={_hobbies} state={this.state.hobby} changeFn={this.hobbiesSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Personality' optionsArr={_personalities} state={this.state.personality} changeFn={this.personalitiesSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <FilterGroup groupName='Species' optionsArr={_species} state={this.state.species} changeFn={this.speciesSelectionChange} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport { IVillager } from '../IVillager';\nimport { Grid, Chip } from '@material-ui/core';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './VillagerDetails.css';\n\nconst VillagerSubDetail = ({label, text}) => {\n  return (\n    <tr>\n      <td className=\"villager-details-sub-detail\"><h3>{label}:</h3></td>\n      <td className=\"villager-details-sub-detail\"><h3>{text}</h3></td>\n    </tr>\n  );\n};\n\nexport class VillagerDetails extends React.Component<{villager: IVillager, closeAction: any}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _villager: IVillager = this.props.villager;\n\n    return (\n      <div className=\"app-modal-container padded-4y padded-2x font-color-dark\">\n        <div className=\"app-details-close-button\" onClick={this.props.closeAction}>\n          <CloseIcon/>\n        </div>\n        <div className=\"padded-2y\">\n          <Grid container spacing={2} >\n            <Grid item xs={12} md={6}>\n              <div className=\"villager-details-image\">\n                <img src={_villager.imageUri} />\n                <h3 className=\"villager-details-saying\">\"{_villager.saying}\"</h3>\n              </div>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <div className=\"villager-details-main padded-2x\">\n                <h1>{ _villager.name }</h1>\n                <Chip label={_villager.personality} className=\"font--main villager-details-chip\" \n                  style={{backgroundColor: (_villager.bubbleColor == '#ffffff' ? '#eeeeee' : _villager.bubbleColor) , color: _villager.textColor}} />\n              </div>\n              <div className=\"villager-details-sub padded-2x\">\n                <h3>Birthday: {_villager.birthday}</h3>\n                <h3>Species: {_villager.species} </h3>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n\n        <div className=\"padded-1y\">\n          <div className=\"villager-details-line background-dark\"></div>\n        </div>\n\n        <div className=\"padded-1y padded-2x\">\n          <table>\n            <tbody>\n              <VillagerSubDetail label=\"Gender\" text={_villager.gender} />\n              <VillagerSubDetail label=\"Catchphrase\" text={`\"${_villager.catchphrase}\"`}/>\n              <VillagerSubDetail label=\"Hobby\" text={_villager.hobby} />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport { VillagersManager } from './VillagersManager'\nimport { Container, Modal, AccordionSummary, Accordion, AccordionDetails, TextField, Chip } from '@material-ui/core';\nimport { PageTitle } from '../shared/page-title/PageTitle';\nimport { IVillager } from './IVillager';\nimport { VillagerItem } from './villager-item/VillagerItem';\nimport { VillagerFilters } from './villager-filters/VillagerFilters';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './Villagers.css';\nimport { VillagerDetails } from './villager-details/VillagerDetails';\nimport { IVillageFilters, IVillageFiltersSelection } from './villager-filters/IVillageFilters';\n\nconst FilterChip = ({filter, filterLabel}) => {\n  if (filter === 'all') {\n    return <span></span>;\n  } else {\n    return <Chip className=\"villager-chip font--main\" label={`${filterLabel}: ${filter}`} />\n  }\n}\n\nexport class Villagers extends VillagersManager {\n\n  /** if component is mounted */\n  private _isMounted: boolean;\n  \n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    const _emptioRadioFilters: IVillageFiltersSelection = {\n      hobby: 'all',\n      gender: 'all',\n      personality: 'all',\n      species: 'all'\n    }\n\n    this.state = {\n      data: {\n        modalOpen: false,\n        currentVillager: null,\n        allVillagers: [],\n        filteredVillagers: [],\n        allPersonalities: [],\n        allHobbies: [],\n        allGender: [],\n        allSpecies: [],\n        textFilter: '',\n        radioFilters: _emptioRadioFilters\n      }\n    }\n\n    this.openVillagerModal = this.openVillagerModal.bind(this);\n    this.closeVillagerModal = this.closeVillagerModal.bind(this);\n    this.textSearch = this.textSearch.bind(this);\n    this.filterSelectionChange = this.filterSelectionChange.bind(this);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    const _allVillagers: IVillager[] = [];\n    const _allPersonalities: string[] = [];\n    const _allHobbies: string[] = [];\n    const _allGender: string[] = [];\n    const _allSpecies: string[] = [];\n\n    this._getAllVillagers().then((villagers: any) => {\n      this._isMounted = true;\n      for (const v in villagers) {\n        if (villagers.hasOwnProperty(v)) {\n          const _newVillager: IVillager = this.renderVillager(villagers[v])\n          \n          _allVillagers.push(_newVillager);\n\n          // set options for filters\n          if (!_allPersonalities.includes(_newVillager.personality)) {\n            _allPersonalities.push(_newVillager.personality);\n          }\n\n          if (!_allHobbies.includes(_newVillager.hobby)) {\n            _allHobbies.push(_newVillager.hobby);\n          }\n\n          if (!_allGender.includes(_newVillager.gender)) {\n            _allGender.push(_newVillager.gender);\n          }\n\n          if (!_allSpecies.includes(_newVillager.species)) {\n            _allSpecies.push(_newVillager.species);\n          }\n        }\n      }\n\n      // set state\n      this.setState({\n        data: {\n          allVillagers: _allVillagers,\n          filteredVillagers: _allVillagers,\n          allPersonalities: _allPersonalities,\n          allHobbies: _allHobbies,\n          allGender: _allGender,\n          allSpecies: _allSpecies\n        }\n      });\n    });\n  }\n\n    /**\n   * open the modal for villager details\n   */\n  openVillagerModal(currentVillager: IVillager) {\n    const currentState = this.state.data;\n    this._changeState('modalOpen', true);\n    this._changeState('currentVillager', currentVillager);\n  }\n\n  /**\n   * close the modal for villager details\n   */\n  closeVillagerModal() {\n    const currentState = this.state.data;\n    this._changeState('modalOpen', false);\n  }\n\n  /**\n   * \n   * @param villager \n   */\n  renderVillager(villager: any): IVillager {\n    return {\n      id: villager['id'],\n      name: villager['name']['name-USen'],\n      personality: villager['personality'],\n      birthday: villager['birthday-string'],\n      species: villager['species'],\n      gender: villager['gender'],\n      hobby: villager['hobby'],\n      catchphrase: villager['catch-phrase'],\n      imageUri: villager['image_uri'],\n      iconUri: villager['icon_uri'],\n      saying: villager['saying'],\n      bubbleColor: villager['bubble-color'],\n      textColor: villager['text-color']\n    }\n  }\n\n  /**\n   * handles the live search based on the filter input\n   * @param searchString\n   */\n  textSearch(searchString: string) {\n    const _search: string = searchString.toLowerCase();\n\n    // return all villagers if search string is empty\n    if (_search === '') {\n      return [... this.state.data.allVillagers];\n    }\n\n    // filter by search string\n    const _filtered = this.state.data.allVillagers.filter((villager: IVillager) => \n      villager.name.toLowerCase().indexOf(_search) > -1\n    );\n    \n    return _filtered;\n  }\n\n  /**\n   * search all radio filters\n   * @param _filteredArr\n   */\n  radioSearch(_filteredArr: IVillager[]) {\n    const _filterSelections:IVillageFiltersSelection = this.state.data.radioFilters;\n\n    const _filterByPersonality = this.personalitySearch(_filteredArr, _filterSelections.personality);\n    const _filterByHobby = this.hobbySearch(_filterByPersonality, _filterSelections.hobby);\n    const _filterByGender = this.genderSearch(_filterByHobby, _filterSelections.gender);\n    const _filterBySpecies = this.speciesSearch(_filterByGender, _filterSelections.species);\n\n    return _filterBySpecies;\n  }\n\n  /**\n   * filter by personality\n   * @param _filteredArr \n   * @param selectedPersonality \n   */\n  personalitySearch(_filteredArr: IVillager[], selectedPersonality: string) {\n    if (selectedPersonality === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.personality === selectedPersonality);\n  }\n\n  /**\n   * filter by hobby\n   * @param _filteredArr \n   * @param selectedHobby \n   */\n  hobbySearch(_filteredArr: IVillager[], selectedHobby: string) {\n    if (selectedHobby === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.hobby === selectedHobby);\n  }\n\n  /**\n   * filter by gender\n   * @param _filteredArr \n   * @param selectedGender \n   */\n  genderSearch(_filteredArr: IVillager[], selectedGender: string) {\n    if (selectedGender === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.gender === selectedGender);\n  }\n\n  /**\n   * filter by species\n   * @param _filteredArr \n   * @param selectedSpecies \n   */\n  speciesSearch(_filteredArr: IVillager[], selectedSpecies: string) {\n    if (selectedSpecies === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.species === selectedSpecies);\n  }\n\n\n  /**\n   * handles change in the text search input\n   * @param searchString \n   */\n  textSearchChange(searchString: string) {\n    this._changeState('textFilter', searchString);\n    console.log('searching: ', this.state.data.textFilter);\n    this.allSearch();\n  }\n\n  /**\n   * listens to any change in the radio filters\n   * @param filtersSelection\n   */\n  filterSelectionChange(filtersSelection: IVillageFiltersSelection) {\n    this._changeState('radioFilters', filtersSelection);\n    this.allSearch();\n  }\n\n  /**\n   * do search (for text search and radio search);\n   */\n  allSearch() {\n    let _filtered;\n\n    // search string\n    const _filteredString = this.textSearch(this.state.data.textFilter || '');\n\n    // radio search\n    _filtered = this.radioSearch(_filteredString);\n\n    this._changeState('filteredVillagers', _filtered);\n  }\n\n  render() {\n    const _modalOpen = this.state.data.modalOpen != null ? this.state.data.modalOpen : false;\n    const _selectedFilter: IVillageFiltersSelection = this.state.data.radioFilters;\n\n    const _availableFilters: IVillageFilters = {\n      personalities: this.state.data.allPersonalities,\n      hobbies: this.state.data.allHobbies,\n      gender: this.state.data.allGender,\n      species: this.state.data.allSpecies\n    };\n\n    return (\n      <div className=\"background-main padded-6y villagers-wrapper\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Villagers\" backLink=\"/\" backLinkDisplay=\"Home\" />\n            <div className=\"app-search-wrapper\">\n              <div className=\"app-search-icon\"><SearchIcon fontSize=\"large\" /></div>\n              <TextField id=\"outlined-basic\" label=\"Search Villager\" variant=\"outlined\" onChange={event => this.textSearchChange(event.target.value)} /> \n            </div>\n          </div>\n\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}>\n              <div className=\"villager-filter-title font-color-dark\">\n                <div className=\"padded-4x\">\n                  {_selectedFilter ? <div className=\"vilalger-chip-list\">\n                    <FilterChip filter={_selectedFilter.gender} filterLabel=\"Gender\" />\n                    <FilterChip filter={_selectedFilter.hobby} filterLabel=\"Hobby\" />\n                    <FilterChip filter={_selectedFilter.personality} filterLabel=\"Personality\" />\n                    <FilterChip filter={_selectedFilter.species} filterLabel=\"Species\" />\n                  </div> : null}\n                </div>\n                <h3>Filters</h3>\n              </div>\n            </AccordionSummary>\n            <AccordionDetails>\n              <VillagerFilters onFilterSelecionChange={this.filterSelectionChange} availableFilters={_availableFilters}/>\n            </AccordionDetails>\n          </Accordion>\n          {\n            this.state.data.filteredVillagers ? \n            <div>\n              <p className=\"font-color-light\">Villagers: {this.state.data.filteredVillagers.length}</p>\n              <div className=\"villagers-container main-section\">\n                {this.state.data.filteredVillagers.map(\n                  (villager: IVillager) => \n                    <div key={villager.id} onClick={() => {this.openVillagerModal(villager)}}>\n                      <VillagerItem villager={villager} />\n                    </div>\n                  ) \n                }\n              </div> \n            </div>\n            : null\n          }\n        </Container>\n        <Modal open={_modalOpen} onClose={this.closeVillagerModal}>\n          <div className=\"app-modal-wrapper\">\n            <VillagerDetails villager={this.state.data.currentVillager} closeAction={this.closeVillagerModal}/>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}","import { Base } from '../../utils/base/Base';\n\nexport class MusicManager extends Base {\n  /**\n   * get a list of all songs\n   */\n  _getAllSongs = async() => {\n    return this._get('/songs');\n  }\n\n  /**\n   * get song\n   * @param songId\n   */\n  _getSong = async(songId: number) => {\n    return this._get(`/songs/${songId}`);\n  }\n}","import React from 'react';\n\nimport { Grid, AccordionSummary, Accordion, AccordionDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { IMusic } from '../IMusic';\nimport './SongItem.css';\n\nexport class SongItem extends React.Component<{song: IMusic}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <div className=\"song-item-container\">\n        {this.props.song ? \n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <span className=\"font-color-dark\">{this.props.song.name}</span>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div className=\"song-item-details\">\n                <div className=\"song-item-image\">\n                  <img src={this.props.song.imageUri} />\n                </div>\n                <div className=\"song-item-audio padded-1y\">\n                  <audio controls>\n                    <source src={this.props.song.musicUri} type=\"audio/mpeg\" />\n                  </audio>\n                </div>\n              </div>\n            </AccordionDetails>\n          </Accordion> \n        : null}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { MusicManager } from './MusicManager';\nimport { Container, TextField } from '@material-ui/core';\n\nimport './Music.css';\nimport { IMusic } from './IMusic';\nimport { PageTitle } from '../shared/page-title/PageTitle';\nimport { SongItem } from './song-item/SongItem';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport class Music extends MusicManager {\n  /** if component is mounted */\n  private _isMounted: boolean;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        allSongs: [],\n        filteredSongs: []\n      }\n    }\n\n    this._isMounted = false;\n    this.textSearch = this.textSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this._getAllSongs().then((songs: any) => {\n      this._isMounted = true;\n      this.renderAllSongs(songs);\n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  renderAllSongs(songs: any) {\n    const _allSongs:IMusic[] = [];\n\n    Object.keys(songs).forEach((key: string) => {\n      const _currentSong = songs[key];\n      const _newSong: IMusic = {\n        name: _currentSong['name']['name-USen'],\n        id: _currentSong['id'],\n        imageUri: _currentSong['image_uri'],\n        musicUri: _currentSong['music_uri']\n      }\n\n      _allSongs.push(_newSong);\n    });\n\n    this._changeState('allSongs', _allSongs);\n    this._changeState('filteredSongs', _allSongs);\n  }\n\n  textSearch(searchString: string) {\n    const _search: string = searchString.toLowerCase();\n\n    // return all songs if search string is empty\n    if (_search === '') {\n      return [... this.state.data.allSongs];\n    }\n\n    // filter by search string\n    const _filtered = this.state.data.allSongs.filter((song: IMusic) => \n      song.name.toLowerCase().indexOf(_search) > -1\n    );\n\n    this._changeState('filteredSongs', _filtered);\n    \n    return _filtered;\n  }\n\n  render() {\n    return (\n      <div className=\"music-wrapper background-main padded-6y\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Music\" backLink=\"/\" backLinkDisplay=\"Home\" />\n            <div className=\"app-search-wrapper\">\n              <div className=\"app-search-icon\"><SearchIcon fontSize=\"large\" /></div>\n              <TextField id=\"outlined-basic\" label=\"Search Song\" variant=\"outlined\" onChange={event => this.textSearch(event.target.value)} /> \n            </div>\n          </div>\n          <div className=\"padded-4y\">\n            {this.state.data.filteredSongs ? \n              this.state.data.filteredSongs.map((song: IMusic) => \n                <SongItem key={song.id} song={song} />\n              )\n            : null}\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}","import { Base } from \"../../utils/base/Base\";\n\nexport class CreaturesManager extends Base {\n  /**\n   * get list of all bugs\n   */\n  _getAllBugs(): Promise<any> {\n    return this._get('/bugs');\n  }\n\n  /**\n   * get list of all fishes\n   */\n  _getAllFishes(): Promise<any> {\n    return this._get('/fish');\n  }\n\n  /**\n   * get list of all sea creatures\n   */\n  _getAllSeaCreatures(): Promise<any> {\n    return this._get('/sea');\n  }\n\n}","import React from 'react';\nimport '../Creature.css';\nimport { ICreature } from '../../ICreature';\n\ninterface IFishProps {\n  fish: ICreature\n}\n\nexport class CreatureItem extends React.Component<IFishProps, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  _changeState(key: string, value: any) {\n    let currentState = this.state;\n    currentState[key] = value;\n\n    this.setState(currentState);\n  }\n\n  render() {\n    return (\n      <div className=\"fish-item\">\n        <div className=\"fish-item-image\">\n          <img src={this.props.fish.iconUri} alt={this.props.fish.name}/>\n        </div>\n        <h3 className=\"fish-item-name font-color-dark\">\n          {this.props.fish.name}\n        </h3>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport { ICreature } from '../ICreature';\nimport { Grid, Chip } from '@material-ui/core';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './CreatureDetails.css';\n\ninterface ICreatureDetailsProps {\n  fish: ICreature | null;\n  closeAction: any\n}\n\nconst FishDetail = ({label, value}) => {\n  return (\n    <tr>\n      <td className=\"creature-detail-col\">{label}: </td>\n      <td className=\"creature-detail-col\">{value}</td>\n    </tr>\n  );\n};\n\nconst Months = ({month}) => {\n  const monthsArr: string[] = month;\n  return (\n    <div>\n      {monthsArr.map((mo: string) => <Chip className=\"creature-detail-chip\" key={mo} label={mo} /> )} \n    </div>\n  )\n}\n\nexport class CreatureDetails extends React.Component<ICreatureDetailsProps, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _time = this.props.fish?.isAllDay ? 'All Day' : this.props.fish?.timeString;\n    const _cjPrice = this.props.fish?.price_cj ? `(CJ - ${this.props.fish?.price_cj} Bells)` : null;\n    const _flickPrice = this.props.fish?.price_flick ? `(Flick - ${this.props.fish?.price_flick} Bells)` : null;\n\n    const _extraPrice = (_cjPrice || _flickPrice) ? \n      (this.props.fish?.price_cj ? _cjPrice : _flickPrice) \n      : '';\n      \n    const _price = `${this.props.fish?.price} Bells ${_extraPrice}`;\n\n    return (\n      <div className=\"app-modal-container padded-4y padded-2x font-color-dark\">\n        <div className=\"app-details-close-button\" onClick={this.props.closeAction}>\n          <CloseIcon/>\n        </div>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={4} style={{position: \"relative\"}}>\n            <div className=\"creature-details-image\">\n              <img src={this.props.fish?.imageUri} alt={this.props.fish?.name} className=\"creature-details-image-main\" />\n              <img src={this.props.fish?.imageUri} alt={this.props.fish?.name} className=\"creature-hidden\" />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <table>\n              <tbody>\n                {this.props.fish?.location ? <FishDetail label=\"Location\" value={this.props.fish?.location} /> : null}\n                {this.props.fish?.shadow ? <FishDetail label=\"Shadow Size\" value={this.props.fish?.shadow} /> : null}\n                <FishDetail label=\"Price\" value={_price} />\n                <FishDetail label=\"Time\" value={_time} />\n              </tbody>\n            </table>\n          </Grid>\n\n          <Grid item xs={12}>\n            <div className=\"creature-details-main padded-2x padded-2y\">\n              <table>\n                <tbody>\n                  <FishDetail label=\"Months (N)\" value={<Months month={this.props.fish?.monthsAvailable_northern} />} />\n                  <FishDetail label=\"Months (S)\" value={<Months month={this.props.fish?.monthsAvailable_southern} />} />\n                </tbody>\n              </table>\n            </div>\n            <div className=\"creature-details-main padded-2x padded-2y\">\n              <h3>Blather's Note:</h3>\n                <p></p>\n                <p>\"{this.props.fish?.museumInfo}\"</p>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport './Creature.css';\n\nimport { ICreature } from '../ICreature';\nimport { CreatureItem } from './creature-item/CreatureItem';\nimport { Modal } from '@material-ui/core';\nimport { CreatureDetails } from '../creature-details/CreatureDetails';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\ninterface IFishState {\n  currentFish: ICreature | null,\n  filteredFishes: ICreature[],\n  isOpenModal: boolean\n}\n\ninterface IFishProps {\n  fishes: ICreature[]\n}\n\nexport class Creature extends React.Component<IFishProps, IFishState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFish: null,\n      filteredFishes: [],\n      isOpenModal: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n\n    this._changeState('filteredFishes', this.props.fishes);\n  }\n\n  _changeState(key: string, value: any) {\n    let currentState = this.state;\n    currentState[key] = value;\n\n    this.setState(currentState);\n  }\n\n  openModal(fish: ICreature) {\n    this._changeState('isOpenModal', true);\n    this._changeState('currentFish', fish);\n  }\n\n  closeModal() {\n    this._changeState('isOpenModal', false);\n    this._changeState('currentFish', null);\n  }\n\n\n  render() {\n    const _fishList: ICreature[] = this.state.filteredFishes.length ? this.state.filteredFishes : this.props.fishes;\n    return (\n      <div className=\"padded-4x padded-2y\">\n        {_fishList ? \n          <div className=\"fishes-container\">\n            {_fishList.map((fish: ICreature) => \n              <div onClick={() => this.openModal(fish)}>\n                <CreatureItem fish={fish} key={fish.id}/> \n              </div>\n            )}\n          </div> \n          : null\n        }\n\n        <Modal open={this.state.isOpenModal} onClose={this.closeModal}>\n          <div className=\"app-modal-wrapper\">\n            <CreatureDetails fish={this.state.currentFish} closeAction={this.closeModal}/>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport { CreaturesManager } from './CreaturesManager';\nimport { Container, Tabs, Tab, Button, Tooltip } from '@material-ui/core';\nimport './Creatures.css';\nimport { PageTitle } from '../shared/page-title/PageTitle';\nimport { Creature } from './creature/Creature';\nimport { ICreature } from './ICreature';\n\nexport class Creatures extends CreaturesManager {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {\n        activeTab: 0,\n        allFishes: [],\n        allBugs: [],\n        allSeaCreatures: []\n      }\n    };\n\n    this.handleTabChange = this.handleTabChange.bind(this);\n  }\n\n  componentDidMount() {\n    this._getAllFishes().then((fishes: any) => {\n      const _allFishes: ICreature[] = this.renderCreature(fishes, 'fish');\n      this._changeState('allFishes', _allFishes);\n    });\n\n    this._getAllBugs().then((bugs: any) => {\n      const _allBugs: ICreature[] = this.renderCreature(bugs, 'bug');\n      this._changeState('allBugs', _allBugs);\n    });\n\n    this._getAllSeaCreatures().then((creatures: any) => {\n      const _allSeaCreatures: ICreature[] = this.renderCreature(creatures, 'sea');\n      this._changeState('allSeaCreatures', _allSeaCreatures);\n    });\n  }\n\n  /**\n   * handles the tab change and sets the active tab\n   * @param event \n   * @param newValue \n   */\n  handleTabChange(event:any, newValue:any): void {\n    this._changeState('activeTab', newValue);\n  }\n\n  /**\n   * map creature from response to interface\n   * @param creatures \n   */\n  renderCreature(creatures: any, kind: string): ICreature[] {\n    const _allCreatures: ICreature[] = [];\n\n    Object.keys(creatures).forEach((key: string) => {\n      const _currentCreature: any = creatures[key];\n      const _newCreature: ICreature = {\n        kind: kind,\n        id: _currentCreature['id'],\n        isAllDay: _currentCreature['availability']['isAllDay'],\n        isAllYear: _currentCreature['availability']['isAllYear'],\n        location: _currentCreature['availability']['location'],\n        monthsAvailable_northern: this.getMonthArray(_currentCreature['availability']['month-array-northern']),\n        monthsAvailable_southern: this.getMonthArray(_currentCreature['availability']['month-array-southern']),\n        timeAvailable: _currentCreature['availability']['time-array'],\n        timeString: _currentCreature['availability']['time'],\n        iconUri: _currentCreature['icon_uri'],\n        imageUri: _currentCreature['image_uri'],\n        museumInfo: _currentCreature['museum-phrase'],\n        name: _currentCreature['name']['name-USen'],\n        price: _currentCreature['price'],\n        price_cj: _currentCreature['price-cj'] || null,\n        price_flick: _currentCreature['price-flick'] || null,\n        shadow: _currentCreature['shadow']\n      };\n\n      _allCreatures.push(_newCreature);\n    });\n\n    console.log(_allCreatures);\n\n    return _allCreatures;\n  } \n\n  /**\n   * return month array converted to string\n   * @param monthArr\n   */\n  getMonthArray(monthArr: number[]): string[] {\n    const _monthArrStr: string[] = [];\n    \n    monthArr.forEach((m: number) => {\n      _monthArrStr.push(this.getMonth(m))\n    });\n\n    return _monthArrStr;\n  }\n\n  /**\n   * convert number to string value\n   * @param index \n   */\n  getMonth(index: number): string {\n    switch(index) {\n      case 1:\n        return 'Jan';\n\n      case 2:\n        return 'Feb';\n\n      case 3:\n        return 'Mar';\n\n      case 4:\n        return 'Apr';\n\n      case 5:\n        return 'May';\n\n      case 6:\n        return 'Jun';\n\n      case 7:\n        return 'Jul';\n\n      case 8:\n        return 'Aug';\n\n      case 9:\n        return 'Sept';\n\n      case 10:\n        return 'Oct';\n\n      case 11:\n        return 'Nov';\n\n      case 12:\n        return 'Dec';\n    }\n    return '';\n  }\n   \n  render() {\n    return (\n      <div className=\"background-main padded-6y creatures-wrapper\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Creatures\" backLink=\"/\" backLinkDisplay=\"Home\" />\n            <div className=\"app-title-button-wrapper\">\n            <Tooltip title=\"Feature will be available soon\" aria-label=\"add\">\n              <div>\n                <Button variant=\"contained\" disabled>\n                  Availability Calendar\n                </Button>\n              </div>\n            </Tooltip>\n            </div>\n          </div>\n\n          <div className=\"padded-2y creatures-container main-section\">\n          <Tabs\n            value={this.state.data.activeTab}\n            onChange={this.handleTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered>\n            <Tab label=\"Fishes\" />\n            <Tab label=\"Bugs\" />\n            <Tab label=\"Sea Creatures\" />\n          </Tabs>\n\n          <div className=\"creatures-section\">\n            <div hidden={this.state.data.activeTab != 0}>\n              <Creature fishes={this.state.data.allFishes} />\n            </div>\n            <div hidden={this.state.data.activeTab != 1}>\n              <Creature fishes={this.state.data.allBugs} />\n            </div>\n            <div hidden={this.state.data.activeTab != 2}>\n              <Creature fishes={this.state.data.allSeaCreatures} />\n            </div>\n          </div>\n\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\n\nimport { Homepage } from './components/homepage/Homepage';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Villagers } from './components/villagers/Villagers';\nimport { Music } from './components/music/Music';\nimport { Creatures } from './components/creatures/Creatures';\nimport { Diy } from './components/items/diy/Diy';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div>\n\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/music\" component={Music} />\n        <Route path=\"/villagers\" component={Villagers} />\n        <Route path=\"/creatures\" component={Creatures} />\n          {/* <Route exact={true}\n            path='/'\n            render={() => (\n              <div className=\"App\">\n                <Homepage />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/villagers'\n            render={() => (\n              <div className=\"App\">\n                <Villagers />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/music'\n            render={() => (\n              <div className=\"App\">\n                <Music />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/creatures'\n            render={() => (\n              <div className=\"App\">\n                <Creatures />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/diy'\n            render={() => (\n              <div className=\"App\">\n                <Diy />\n              </div>\n          )}/> */}\n\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}