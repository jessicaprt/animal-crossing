{"version":3,"sources":["components/homepage/homepage-icon/HomepageIcon.tsx","components/homepage/Homepage.tsx","utils/base/Base.tsx","components/villagers/VillagersManager.tsx","components/shared/page-title/PageTitle.tsx","components/villagers/villager-item/VillagerItem.tsx","components/villagers/villager-filters/VillagerFilters.tsx","components/villagers/villager-details/VillagerDetails.tsx","components/villagers/Villagers.tsx","components/music/MusicManager.tsx","components/music/song-item/SongItem.tsx","components/music/Music.tsx","components/creatures/CreaturesManager.tsx","components/creatures/Creatures.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomepageIcon","props","Grid","item","xs","to","this","homepageItem","link","className","src","imageUrl","name","React","Component","Homepage","state","time","checkTime","setTimeout","now","Date","setState","toLocaleString","hour","minute","hour12","Container","container","spacing","id","map","key","Base","_baseEndpoint","_get","request","a","url","fetch","response","json","body","status","Error","message","VillagersManager","_getAllVillagers","PageTitle","backLink","backLinkDisplay","pageTitle","VillagerItem","_currentVillager","villager","style","borderColor","bubbleColor","iconUri","DefaultSelectionElement","FormControlLabel","value","DEFAULT_SELECTION","control","Radio","label","FilterGroup","groupName","optionsArr","changeFn","FormControl","FormLabel","component","RadioGroup","aria-label","onChange","FormGroup","VillagerFilters","gender","hobby","species","personality","genderSelectionChange","bind","hobbiesSelectionChange","personalitiesSelectionChange","speciesSelectionChange","event","changeState","target","_currentState","onFilterSelecionChange","_personalities","availableFilters","personalities","_hobbies","hobbies","_gender","_species","md","VillagerSubDetail","text","VillagerDetails","_villager","onClick","closeAction","imageUri","saying","Chip","backgroundColor","color","textColor","birthday","catchphrase","FilterChip","filter","filterLabel","Villagers","_isMounted","data","modalOpen","currentVillager","allVillagers","filteredVillagers","allPersonalities","allHobbies","allGender","allSpecies","textFilter","radioFilters","openVillagerModal","closeVillagerModal","textSearch","filterSelectionChange","_allVillagers","_allPersonalities","_allHobbies","_allGender","_allSpecies","then","villagers","v","hasOwnProperty","_newVillager","renderVillager","push","includes","stateKey","newState","currentState","searchString","_search","toLowerCase","indexOf","_filteredArr","_filterSelections","_filterByPersonality","personalitySearch","_filterByHobby","hobbySearch","_filterByGender","genderSearch","speciesSearch","selectedPersonality","selectedHobby","selectedGender","selectedSpecies","console","log","allSearch","filtersSelection","_filtered","_filteredString","radioSearch","_modalOpen","_selectedFilter","_availableFilters","fontSize","TextField","variant","textSearchChange","Accordion","AccordionSummary","expandIcon","AccordionDetails","length","Modal","open","onClose","MusicManager","_getAllSongs","_getSong","songId","SongItem","song","controls","musicUri","type","Music","allSongs","filteredSongs","songs","renderAllSongs","_allSongs","Object","keys","forEach","_currentSong","_newSong","CreaturesManager","Creatures","App","baseName","process","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.77694db4.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport { IHomepageItem } from '../IHomepageItem';\nimport { Link } from \"react-router-dom\"; \n\nexport class HomepageIcon extends React.Component<{homepageItem: IHomepageItem}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Grid item xs={4}>  \n        <Link to={this.props.homepageItem.link}>\n          <div className=\"homepage-item-container padded-1y\">\n            <div className=\"homepage-item\">\n              <div className=\"homepage-item-image\">\n                <img src={`assets/homepage_icons/${this.props.homepageItem.imageUrl}`}/>\n              </div>\n              <h2 className=\"font-color-dark homage-item-name\">{this.props.homepageItem.name}</h2>\n            </div>\n          </div>\n        </Link>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport './IHomepageItem';\nimport './Homepage.css';\nimport { IHomepageItem } from './IHomepageItem';\nimport { HomepageIcon } from './homepage-icon/HomepageIcon';\n\nexport class Homepage extends React.Component<{}, {time: string}> {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      time: ''\n    }\n  }\n  \n  componentDidMount() {\n    const checkTime = () => {\n      setTimeout(() => {\n        const now = new Date();\n        this.setState({\n          time: now.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n        });\n        checkTime();\n      }, 500);\n    }\n\n    checkTime();\n  }\n\n  render() {\n    const time = new Date();\n    const icons:IHomepageItem[] = [\n      {\n        id: 'homepage-icon--1',\n        name: \"Villagers\",\n        imageUrl: \"villager_icon.png\",\n        link: '/villagers'\n      },\n      {\n        id: 'homepage-icon--2',\n        name: \"Music\",\n        imageUrl: \"music_icon.png\",\n        link: '/music'\n      },\n      {\n        id: 'homepage-icon--3',\n        name: \"Creatures\",\n        imageUrl: \"creature_icon.png\",\n        link: '/creatures'\n      },\n      {\n        id: 'homepage-icon--4',\n        name: \"DIY\",\n        imageUrl: \"diy_icon.png\",\n        link: '/'\n      },\n      {\n        id: 'homepage-icon--5',\n        name: \"Shopping\",\n        imageUrl: \"shopping_icon.png\",\n        link: '/'\n      },\n      {\n        id: 'homepage-icon--6',\n        name: \"Art\",\n        imageUrl: \"art_icon.png\",\n        link: '/'\n      },\n    ];\n\n    return (\n      <div className=\"background-main font--main homepage-wrapper padded-6y\">\n        <div className=\"homepage-container\">\n          <Container>\n            <h3 className=\"font-color-light homepage-time\">{this.state.time}</h3>\n            <h1 className=\"font-color-dark homepage-title\">Animal Crossing: New Horizons</h1>\n\n            <div className=\"padded-6y homepage-grid-wrapper\">\n              <Grid container spacing={2}>\n                {icons.map((homepageItem: IHomepageItem) => <HomepageIcon key={homepageItem.id} homepageItem={homepageItem}/> )}\n              </Grid>\n            </div>\n          </Container>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'; \n\nexport class Base extends React.Component<{}, {data: any}> {\n  private _baseEndpoint = 'http://acnhapi.com/v1';\n  \n  _get = async(request: string): Promise<any> => {\n    const url = `${this._baseEndpoint}${request}`;\n    \n    const response = await fetch(url);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n        throw Error(body.message) \n    }\n\n    return body;\n  }\n}","import { Base } from '../../utils/base/Base';\n\nexport class VillagersManager extends Base {\n  /**\n   * get a list of all villagers\n   */\n  _getAllVillagers = async() => {\n    return this._get('/villagers');\n  }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\"; \nimport './PageTitle.css';\n\nexport class PageTitle extends React.Component<{backLinkDisplay, backLink, pageTitle}, {}> {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n      <div className=\"padded-2y\">\n        <h3 className=\"font-color-light\">\n          <Link to={this.props.backLink}>\n            <span className=\"page-title-breadcrumb\">{'< ' + this.props.backLinkDisplay}</span>\n          </Link>\n        </h3>\n        <h1 className=\"font-color-dark page-title\">{this.props.pageTitle}</h1>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport './VillagerItem.css';\nimport { IVillager } from '../IVillager';\n\nexport class VillagerItem extends React.Component<{villager: IVillager}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _currentVillager: IVillager = this.props.villager;\n    return(\n      <div className=\"villager-item-container padded-1x padded-1y\">\n        <div className=\"villager-item-image\" style={{borderColor: _currentVillager.bubbleColor}}>\n          <img src={_currentVillager.iconUri} />\n        </div>\n        <h3 className=\"villager-item-name font-color-dark\">{_currentVillager.name}</h3>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './VillagerFilters.css';\nimport { Grid, FormLabel, FormGroup, FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport { IVillageFilters, IVillageFiltersSelection } from './IVillageFilters';\n\ninterface IVillagerFiltersProps {\n  onFilterSelecionChange(filters: IVillageFiltersSelection): void, \n  availableFilters: IVillageFilters \n}\n\nconst DefaultSelectionElement = ({key}) => {\n  return <FormControlLabel\n    key='gender-all'\n    value={DEFAULT_SELECTION}\n    control={<Radio />}\n    label={DEFAULT_SELECTION}\n  />\n};\n\nconst FilterGroup = ({groupName, optionsArr, state, changeFn}) => {\n  return (\n    <FormControl>\n      <FormLabel component=\"legend\">{groupName}</FormLabel>\n      <RadioGroup aria-label=\"gender\" name=\"gender\" value={state} onChange={changeFn}>\n        <FormGroup className=\"filter-form-group padded-2x font--main\">\n          <DefaultSelectionElement key='gender-all' />\n          {optionsArr.map((optionsArr:string) => \n            <FormControlLabel\n              key={optionsArr}\n              value={optionsArr}\n              control={<Radio />}\n              label={optionsArr}\n          />)}\n        </FormGroup>\n      </RadioGroup>\n    </FormControl>\n  )\n};\n\nconst DEFAULT_SELECTION = 'all';\n\nexport class VillagerFilters extends React.Component<IVillagerFiltersProps, IVillageFiltersSelection> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: DEFAULT_SELECTION,\n      hobby: DEFAULT_SELECTION,\n      species: DEFAULT_SELECTION,\n      personality: DEFAULT_SELECTION\n    }\n\n    this.genderSelectionChange = this.genderSelectionChange.bind(this);\n    this.hobbiesSelectionChange = this.hobbiesSelectionChange.bind(this);\n    this.personalitiesSelectionChange = this.personalitiesSelectionChange.bind(this);\n    this.speciesSelectionChange = this.speciesSelectionChange.bind(this);\n  }\n\n  /**\n   * when a gender filter is selected\n   * @param event\n   */\n  genderSelectionChange(event) {\n    this.changeState('gender', event.target.value);\n  }\n\n  /**\n   * when a hobbies filter is selected\n   * @param event\n   */\n  hobbiesSelectionChange(event) {\n    this.changeState('hobby', event.target.value);\n  }\n\n  /**\n   * when a personalities filter is selected\n   * @param event\n   */\n  personalitiesSelectionChange(event) {\n    this.changeState('personality', event.target.value);\n  }\n\n  /**\n   * when a species filter is selected\n   * @param event\n   */\n  speciesSelectionChange(event) {\n    this.changeState('species', event.target.value);\n  }\n\n\n  /**\n   * change a state value\n   * @param key\n   * @param value \n   */\n  changeState(key: string, value: string) {\n    let _currentState = this.state;\n    _currentState[key] = value;\n\n    this.setState(_currentState);\n    this.props.onFilterSelecionChange(this.state);\n  }\n\n  render() {\n    const _personalities: string[] = this.props.availableFilters.personalities;\n    const _hobbies: string[] = this.props.availableFilters.hobbies;\n    const _gender: string[] = this.props.availableFilters.gender;\n    const _species: string[] = this.props.availableFilters.species;\n\n    return (\n      <div className=\"padded-4x\">\n        <Grid container spacing={4}>\n          \n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Gender' optionsArr={_gender} state={this.state.gender} changeFn={this.genderSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Hobby' optionsArr={_hobbies} state={this.state.hobby} changeFn={this.hobbiesSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <FilterGroup groupName='Personality' optionsArr={_personalities} state={this.state.personality} changeFn={this.personalitiesSelectionChange} />\n          </Grid>\n\n          <Grid item xs={12} md={12}>\n            <FilterGroup groupName='Species' optionsArr={_species} state={this.state.species} changeFn={this.speciesSelectionChange} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport { IVillager } from '../IVillager';\nimport { Grid, Chip } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './VillagerDetails.css';\n\nconst VillagerSubDetail = ({label, text}) => {\n  return (\n    <tr>\n      <td className=\"villager-details-sub-detail\"><h3>{label}:</h3></td>\n      <td className=\"villager-details-sub-detail\"><h3>{text}</h3></td>\n    </tr>\n  );\n};\n\nexport class VillagerDetails extends React.Component<{villager: IVillager, closeAction: any}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _villager: IVillager = this.props.villager;\n\n    return (\n      <div className=\"villager-details-container padded-4y padded-2x font-color-dark\">\n        <div className=\"villager-detailsclose-button\" onClick={this.props.closeAction}>\n          <CloseIcon/>\n        </div>\n        <div className=\"padded-2y\">\n          <Grid container spacing={2} >\n            <Grid item xs={12} md={6}>\n              <div className=\"villager-details-image\">\n                <img src={_villager.imageUri} />\n                <h3 className=\"villager-details-saying\">\"{_villager.saying}\"</h3>\n              </div>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <div className=\"villager-details-main padded-2x\">\n                <h1>{ _villager.name }</h1>\n                <Chip label={_villager.personality} className=\"font--main villager-details-chip\" \n                  style={{backgroundColor: (_villager.bubbleColor == '#ffffff' ? '#eeeeee' : _villager.bubbleColor) , color: _villager.textColor}} />\n              </div>\n              <div className=\"villager-details-sub padded-2x\">\n                <h3>Birthday: {_villager.birthday}</h3>\n                <h3>Species: {_villager.species} </h3>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n\n        <div className=\"padded-1y\">\n          <div className=\"villager-details-line background-dark\"></div>\n        </div>\n\n        <div className=\"padded-1y padded-2x\">\n          <table>\n            <tbody>\n              <VillagerSubDetail label=\"Gender\" text={_villager.gender} />\n              <VillagerSubDetail label=\"Catchphrase\" text={`\"${_villager.catchphrase}\"`}/>\n              <VillagerSubDetail label=\"Hobby\" text={_villager.hobby} />\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport { VillagersManager } from './VillagersManager'\nimport { Container, Modal, AccordionSummary, Accordion, AccordionDetails, TextField, Chip } from '@material-ui/core';\nimport { PageTitle } from '../shared/page-title/PageTitle';\nimport { IVillager } from './IVillager';\nimport { VillagerItem } from './villager-item/VillagerItem';\nimport { VillagerFilters } from './villager-filters/VillagerFilters';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './Villagers.css';\nimport { VillagerDetails } from './villager-details/VillagerDetails';\nimport { IVillageFilters, IVillageFiltersSelection } from './villager-filters/IVillageFilters';\n\nconst FilterChip = ({filter, filterLabel}) => {\n  if (filter === 'all') {\n    return <span></span>;\n  } else {\n    return <Chip className=\"villager-chip font--main\" label={`${filterLabel}: ${filter}`} />\n  }\n}\n\nexport class Villagers extends VillagersManager {\n\n  /** if component is mounted */\n  private _isMounted: boolean;\n  \n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    const _emptioRadioFilters: IVillageFiltersSelection = {\n      hobby: 'all',\n      gender: 'all',\n      personality: 'all',\n      species: 'all'\n    }\n\n    this.state = {\n      data: {\n        modalOpen: false,\n        currentVillager: null,\n        allVillagers: [],\n        filteredVillagers: [],\n        allPersonalities: [],\n        allHobbies: [],\n        allGender: [],\n        allSpecies: [],\n        textFilter: '',\n        radioFilters: _emptioRadioFilters\n      }\n    }\n\n    this.openVillagerModal = this.openVillagerModal.bind(this);\n    this.closeVillagerModal = this.closeVillagerModal.bind(this);\n    this.textSearch = this.textSearch.bind(this);\n    this.filterSelectionChange = this.filterSelectionChange.bind(this);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    const _allVillagers: IVillager[] = [];\n    const _allPersonalities: string[] = [];\n    const _allHobbies: string[] = [];\n    const _allGender: string[] = [];\n    const _allSpecies: string[] = [];\n\n    this._getAllVillagers().then((villagers: any) => {\n      this._isMounted = true;\n      for (const v in villagers) {\n        if (villagers.hasOwnProperty(v)) {\n          const _newVillager: IVillager = this.renderVillager(villagers[v])\n          \n          _allVillagers.push(_newVillager);\n\n          // set options for filters\n          if (!_allPersonalities.includes(_newVillager.personality)) {\n            _allPersonalities.push(_newVillager.personality);\n          }\n\n          if (!_allHobbies.includes(_newVillager.hobby)) {\n            _allHobbies.push(_newVillager.hobby);\n          }\n\n          if (!_allGender.includes(_newVillager.gender)) {\n            _allGender.push(_newVillager.gender);\n          }\n\n          if (!_allSpecies.includes(_newVillager.species)) {\n            _allSpecies.push(_newVillager.species);\n          }\n        }\n      }\n\n      // set state\n      this.setState({\n        data: {\n          allVillagers: _allVillagers,\n          filteredVillagers: _allVillagers,\n          allPersonalities: _allPersonalities,\n          allHobbies: _allHobbies,\n          allGender: _allGender,\n          allSpecies: _allSpecies\n        }\n      });\n    });\n  }\n\n    /**\n   * open the modal for villager details\n   */\n  openVillagerModal(currentVillager: IVillager) {\n    const currentState = this.state.data;\n    this.changeState('modalOpen', true);\n    this.changeState('currentVillager', currentVillager);\n  }\n\n  /**\n   * close the modal for villager details\n   */\n  closeVillagerModal() {\n    const currentState = this.state.data;\n    this.changeState('modalOpen', false);\n  }\n\n  /**\n   * update the state\n   * @param stateKey \n   * @param newState \n   */\n  changeState(stateKey: string, newState: any) {\n    let currentState = this.state.data;\n    currentState[stateKey] = newState;\n\n    this.setState({\n      data: currentState\n    });\n  }\n\n  /**\n   * \n   * @param villager \n   */\n  renderVillager(villager: any): IVillager {\n    return {\n      id: villager['id'],\n      name: villager['name']['name-USen'],\n      personality: villager['personality'],\n      birthday: villager['birthday-string'],\n      species: villager['species'],\n      gender: villager['gender'],\n      hobby: villager['hobby'],\n      catchphrase: villager['catch-phrase'],\n      imageUri: villager['image_uri'],\n      iconUri: villager['icon_uri'],\n      saying: villager['saying'],\n      bubbleColor: villager['bubble-color'],\n      textColor: villager['text-color']\n    }\n  }\n\n  /**\n   * handles the live search based on the filter input\n   * @param searchString\n   */\n  textSearch(searchString: string) {\n    const _search: string = searchString.toLowerCase();\n\n    // return all villagers if search string is empty\n    if (_search === '') {\n      return [... this.state.data.allVillagers];\n    }\n\n    // filter by search string\n    const _filtered = this.state.data.allVillagers.filter((villager: IVillager) => \n      villager.name.toLowerCase().indexOf(_search) > -1\n    );\n    \n    return _filtered;\n  }\n\n  /**\n   * search all radio filters\n   * @param _filteredArr\n   */\n  radioSearch(_filteredArr: IVillager[]) {\n    const _filterSelections:IVillageFiltersSelection = this.state.data.radioFilters;\n\n    const _filterByPersonality = this.personalitySearch(_filteredArr, _filterSelections.personality);\n    const _filterByHobby = this.hobbySearch(_filterByPersonality, _filterSelections.hobby);\n    const _filterByGender = this.genderSearch(_filterByHobby, _filterSelections.gender);\n    const _filterBySpecies = this.speciesSearch(_filterByGender, _filterSelections.species);\n\n    return _filterBySpecies;\n  }\n\n  /**\n   * filter by personality\n   * @param _filteredArr \n   * @param selectedPersonality \n   */\n  personalitySearch(_filteredArr: IVillager[], selectedPersonality: string) {\n    if (selectedPersonality === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.personality === selectedPersonality);\n  }\n\n  /**\n   * filter by hobby\n   * @param _filteredArr \n   * @param selectedHobby \n   */\n  hobbySearch(_filteredArr: IVillager[], selectedHobby: string) {\n    if (selectedHobby === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.hobby === selectedHobby);\n  }\n\n  /**\n   * filter by gender\n   * @param _filteredArr \n   * @param selectedGender \n   */\n  genderSearch(_filteredArr: IVillager[], selectedGender: string) {\n    if (selectedGender === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.gender === selectedGender);\n  }\n\n  /**\n   * filter by species\n   * @param _filteredArr \n   * @param selectedSpecies \n   */\n  speciesSearch(_filteredArr: IVillager[], selectedSpecies: string) {\n    if (selectedSpecies === 'all') {\n      return [..._filteredArr];\n    }\n    return _filteredArr.filter((villager: IVillager) => villager.species === selectedSpecies);\n  }\n\n\n  /**\n   * handles change in the text search input\n   * @param searchString \n   */\n  textSearchChange(searchString: string) {\n    this.changeState('textFilter', searchString);\n    console.log('searching: ', this.state.data.textFilter);\n    this.allSearch();\n  }\n\n  /**\n   * listens to any change in the radio filters\n   * @param filtersSelection\n   */\n  filterSelectionChange(filtersSelection: IVillageFiltersSelection) {\n    this.changeState('radioFilters', filtersSelection);\n    this.allSearch();\n  }\n\n  /**\n   * do search (for text search and radio search);\n   */\n  allSearch() {\n    let _filtered;\n\n    // search string\n    const _filteredString = this.textSearch(this.state.data.textFilter || '');\n\n    // radio search\n    _filtered = this.radioSearch(_filteredString);\n\n    this.changeState('filteredVillagers', _filtered);\n  }\n\n  render() {\n    const _modalOpen = this.state.data.modalOpen != null ? this.state.data.modalOpen : false;\n    const _selectedFilter: IVillageFiltersSelection = this.state.data.radioFilters;\n\n    const _availableFilters: IVillageFilters = {\n      personalities: this.state.data.allPersonalities,\n      hobbies: this.state.data.allHobbies,\n      gender: this.state.data.allGender,\n      species: this.state.data.allSpecies\n    };\n\n    return (\n      <div className=\"background-main padded-6y villagers-wrapper\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Villagers\" backLink=\"/\" backLinkDisplay=\"Home\" />\n            <div className=\"app-search-wrapper\">\n              <div className=\"app-search-icon\"><SearchIcon fontSize=\"large\" /></div>\n              <TextField id=\"outlined-basic\" label=\"Search Villager\" variant=\"outlined\" onChange={event => this.textSearchChange(event.target.value)} /> \n            </div>\n          </div>\n\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}>\n              <div className=\"villager-filter-title font-color-dark\">\n                <div className=\"padded-4x\">\n                  {_selectedFilter ? <div className=\"vilalger-chip-list\">\n                    <FilterChip filter={_selectedFilter.gender} filterLabel=\"Gender\" />\n                    <FilterChip filter={_selectedFilter.hobby} filterLabel=\"Hobby\" />\n                    <FilterChip filter={_selectedFilter.personality} filterLabel=\"Personality\" />\n                    <FilterChip filter={_selectedFilter.species} filterLabel=\"Species\" />\n                  </div> : null}\n                </div>\n                <h3>Filters</h3>\n              </div>\n            </AccordionSummary>\n            <AccordionDetails>\n              <VillagerFilters onFilterSelecionChange={this.filterSelectionChange} availableFilters={_availableFilters}/>\n            </AccordionDetails>\n          </Accordion>\n          {\n            this.state.data.filteredVillagers ? \n            <div>\n              <p className=\"font-color-light\">Villagers: {this.state.data.filteredVillagers.length}</p>\n              <div className=\"villagers-container\">\n                {this.state.data.filteredVillagers.map(\n                  (villager: IVillager) => \n                    <div key={villager.id} onClick={() => {this.openVillagerModal(villager)}}>\n                      <VillagerItem villager={villager} />\n                    </div>\n                  ) \n                }\n              </div> \n            </div>\n            : null\n          }\n        </Container>\n        <Modal open={_modalOpen} onClose={this.closeVillagerModal}>\n          <div className=\"villager-modal-wrapper\">\n            <VillagerDetails villager={this.state.data.currentVillager} closeAction={this.closeVillagerModal}/>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}","import { Base } from '../../utils/base/Base';\n\nexport class MusicManager extends Base {\n  /**\n   * get a list of all songs\n   */\n  _getAllSongs = async() => {\n    return this._get('/songs');\n  }\n\n  /**\n   * get song\n   * @param songId\n   */\n  _getSong = async(songId: number) => {\n    return this._get(`/songs/${songId}`);\n  }\n}","import React from 'react';\n\nimport { Grid, AccordionSummary, Accordion, AccordionDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { IMusic } from '../IMusic';\nimport './SongItem.css';\n\nexport class SongItem extends React.Component<{song: IMusic}, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <div className=\"song-item-container\">\n        {this.props.song ? \n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <span className=\"font-color-dark\">{this.props.song.name}</span>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div className=\"song-item-details\">\n                <div className=\"song-item-image\">\n                  <img src={this.props.song.imageUri} />\n                </div>\n                <div className=\"song-item-audio padded-1y\">\n                  <audio controls>\n                    <source src={this.props.song.musicUri} type=\"audio/mpeg\" />\n                  </audio>\n                </div>\n              </div>\n            </AccordionDetails>\n          </Accordion> \n        : null}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { MusicManager } from './MusicManager';\nimport { Container, TextField } from '@material-ui/core';\n\nimport './Music.css';\nimport { IMusic } from './IMusic';\nimport { PageTitle } from '../shared/page-title/PageTitle';\nimport { SongItem } from './song-item/SongItem';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport class Music extends MusicManager {\n  /** if component is mounted */\n  private _isMounted: boolean;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        allSongs: [],\n        filteredSongs: []\n      }\n    }\n\n    this._isMounted = false;\n    this.textSearch = this.textSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this._getAllSongs().then((songs: any) => {\n      this._isMounted = true;\n      this.renderAllSongs(songs);\n    })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  /** update state */\n  changeState(key: string, newState: any) {\n    let _currentState = this.state.data;\n    _currentState[key] = newState;\n    this.setState(_currentState);\n  }\n  \n\n  renderAllSongs(songs: any) {\n    const _allSongs:IMusic[] = [];\n\n    Object.keys(songs).forEach((key: string) => {\n      const _currentSong = songs[key];\n      const _newSong: IMusic = {\n        name: _currentSong['name']['name-USen'],\n        id: _currentSong['id'],\n        imageUri: _currentSong['image_uri'],\n        musicUri: _currentSong['music_uri']\n      }\n\n      _allSongs.push(_newSong);\n    });\n\n    this.changeState('allSongs', _allSongs);\n    this.changeState('filteredSongs', _allSongs);\n  }\n\n  textSearch(searchString: string) {\n    const _search: string = searchString.toLowerCase();\n\n    // return all songs if search string is empty\n    if (_search === '') {\n      return [... this.state.data.allSongs];\n    }\n\n    // filter by search string\n    const _filtered = this.state.data.allSongs.filter((song: IMusic) => \n      song.name.toLowerCase().indexOf(_search) > -1\n    );\n\n    this.changeState('filteredSongs', _filtered);\n    \n    return _filtered;\n  }\n\n  render() {\n    return (\n      <div className=\"music-wrapper background-main padded-6y\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Music\" backLink=\"/\" backLinkDisplay=\"Home\" />\n            <div className=\"app-search-wrapper\">\n              <div className=\"app-search-icon\"><SearchIcon fontSize=\"large\" /></div>\n              <TextField id=\"outlined-basic\" label=\"Search Song\" variant=\"outlined\" onChange={event => this.textSearch(event.target.value)} /> \n            </div>\n          </div>\n          <div className=\"padded-4y\">\n            {this.state.data.filteredSongs ? \n              this.state.data.filteredSongs.map((song: IMusic) => \n                <SongItem key={song.id} song={song} />\n              )\n            : null}\n          </div>\n        </Container>\n      </div>\n    )\n  }\n}","import { Base } from \"../../utils/base/Base\";\n\nexport class CreaturesManager extends Base {\n  /**\n   * get list of all bugs\n   */\n  _getAllBugs(): Promise<any> {\n    return this._get('/bugs');\n  }\n\n  /**\n   * get list of all fishes\n   */\n  _getAllFishes(): Promise<any> {\n    return this._get('/fish');\n  }\n\n  /**\n   * get list of all sea creatures\n   */\n  _getAllSeaCreatures(): Promise<any> {\n    return this._get('/sea');\n  }\n\n}","import React from 'react';\n\nimport { CreaturesManager } from './CreaturesManager';\nimport { Container, Modal, AccordionSummary, Accordion, AccordionDetails, TextField, Chip } from '@material-ui/core';\nimport './Creatures.css';\nimport { PageTitle } from '../shared/page-title/PageTitle';\n\nexport class Creatures extends CreaturesManager {\n  render() {\n    return (\n      <div className=\"background-main padded-6y creatures-wrapper\">\n        <Container>\n          <div className=\"app-title-container\">\n            <PageTitle pageTitle=\"Creatures\" backLink=\"/\" backLinkDisplay=\"Home\" />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Homepage } from './components/homepage/Homepage';\nimport { Page } from './components/page/Page';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Villagers } from './components/villagers/Villagers';\nimport { Music } from './components/music/Music';\nimport { Creatures } from './components/creatures/Creatures';\n\nfunction App() {\n  return (\n    <BrowserRouter baseName={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n\n          <Route exact={true}\n            path='/'\n            render={() => (\n              <div className=\"App\">\n                <Homepage />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/villagers'\n            render={() => (\n              <div className=\"App\">\n                <Villagers />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/music'\n            render={() => (\n              <div className=\"App\">\n                <Music />\n              </div>\n          )}/>\n\n          <Route exact={true}\n            path='/creatures'\n            render={() => (\n              <div className=\"App\">\n                <Creatures />\n              </div>\n          )}/>\n\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}